{"version":3,"sources":["frontend/img/apples_oranges_1.png","frontend/Header.js","frontend/prices-get.js","frontend/offers-get.js","frontend/OrderCreator.js","frontend/Selector.js","frontend/NotFound.js","frontend/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","prices","apples","oranges","offers","0","1","2","OrderCreator","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","quantities","subtotal","offer","offerId","discount","total","prevProps","_this2","setState","subtotalCalc","document","getElementById","value","_this3","alert","resetter","callbackFromSelector","event","_this4","preventDefault","_this5","addition","toFixed","_this5$state","offerAdjust","sub","item","_this$state","Math","floor","_this6","Fragment","onSubmit","e","addToCart","id","type","placeholder","required","min","onClick","restarter","src","fruits_1","alt","React","Component","Selector","returnOfferId","returnedId","target","onChange","setOffer","keys","map","key","values","OrderCreator_OrderCreator","NotFound","react_router_dom","to","Main","react_router","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e1917a65.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/apples_oranges_1.09b86631.png\";","import React from 'react';\n// import { NavLink } from 'react-router-dom';\n\nexport default function Header() {\n    return(\n        <div className='pad-20  bg-349'>\n            <h3 className='is-fc0'>\n                The FruitCart. Mixing apples with oranges. \n                {/* <NavLink to='/' className='a2'>Home</NavLink> */}\n            </h3>\n            <p className='pad-10 is-white'>A test application made with React</p>\n        </div>\n    );\n}","//import React not necessary as this is just a function\n\nconst prices = {\n    apples: 0.60,\n    oranges: 0.25\n}\n\nexport default prices;\n\n// using an object as front-end data structure, then imported in orderCreator\n","//import React not necessary as this is just a function\n\nconst offers = {\n    0: \"No offer\",\n    1: \"Buy one, get one free - on Apples\",\n    2: \"3 for the price of 2 - on Oranges\"\n}\n\nexport default offers;\n\n\n// using an object as front-end data structure, then imported in Selector and orderCreator\n","import React from 'react';\nimport prices from './prices-get';\nimport offers from './offers-get';\nimport fruits_1 from './img/apples_oranges_1.png';\n\nexport default class OrderCreator extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            quantities: {\n                apples: 0,\n                oranges: 0\n            },\n            subtotal: 0,\n            offer: this.props.offerId,\n            discount: 0,\n            total: 0\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        if (this.props.offerId !== prevProps.offerId) {\n            this.setState({\n                offer: this.props.offerId\n            },\n                // trigger subtotal recalculation\n                () => { this.subtotalCalc(this.state.quantities) }\n            );\n        }\n    }\n\n    resetter() {\n        document.getElementById(\"item1\").value = '';\n        document.getElementById(\"item2\").value = '';\n    };\n\n    restarter() {\n        if (this.state.total < 0.01) {\n            alert(\"Please add a fruit to your cart before placing an order\")\n        } else {\n            this.resetter();\n            this.setState({\n                quantities: {\n                    apples: 0,\n                    oranges: 0\n                },\n                offer: '0'\n            },\n                // trigger offer reset and subtotal recalculation\n                () => {\n                    // callback from parent magic here\n                    this.props.callbackFromSelector(this.state.offer);\n                    this.subtotalCalc(this.state.quantities);\n                }\n            );\n            alert(\"Thank you. Your order has been placed.\")\n        }\n\n    };\n\n    addToCart(event) {\n        event.preventDefault(event);\n        const apples = document.getElementById(\"item1\").value;\n        const oranges = document.getElementById(\"item2\").value;\n\n        let quantities = {\n            apples,\n            oranges\n        };\n        // console.log(`quantities: ${quantities}`);\n\n        this.setState({\n            quantities\n        },\n            () => {\n                this.subtotalCalc(quantities);\n                //console.log(this.state); // subtotal not updated here\n            }\n        );\n\n    }\n\n    subtotalCalc(quantities) {\n\n        //addition(quantities, prices);\n        this.setState({\n            subtotal: this.addition(quantities, prices).toFixed(2)\n        },\n            () => {\n\n                // any other concatenated function\n                const { subtotal, offer } = this.state; //obj.des.\n                this.setState({\n                    total: offer === '0' ? subtotal :\n                        this.offerAdjust()\n                }\n                // ,    () => { console.log(this.state); }\n                )\n            }\n        );\n\n    }\n\n    addition(quantities, prices) {\n        let sub = 0;\n        for (let item in quantities) {\n            sub += prices[item] * quantities[item];\n        }\n        return sub;\n    }\n\n    offerAdjust() {\n        const { quantities, subtotal, offer } = this.state;\n        if (offer === '1') {\n            let discount = (Math.floor(quantities.apples / 2) * prices.apples).toFixed(2);\n            this.setState({ discount });\n            return (subtotal - discount).toFixed(2);\n        } else if (offer === '2') {\n            let discount = (Math.floor(quantities.oranges / 3) * prices.oranges).toFixed(2);\n            this.setState({ discount });\n            return (subtotal - discount).toFixed(2);\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <div className=\"row left\">\n                    <div>\n                        <div className=\"w60vw mar-10 radius-8 border-2\">\n                            <form onSubmit={e => this.addToCart(e)}>\n                                <div className='wrapper'>\n                                    <p className=\"w50vw is-349 bg-e pad-5 mar-10 border-1 radius-4\">\n                                        New Order - Enter Quantities\n                                    </p>\n\n                                    <div className=\"row\">\n                                        <input\n                                            className=\"w50 space-04 pad-10 mar-10 border-1 radius-4\"\n                                            id=\"item1\"\n                                            type=\"number\"\n                                            placeholder=\"0\"\n                                            required\n                                            min=\"0\"\n                                        // onInput={() => this.value = Math.abs(this.value)}\n                                        />\n                                        <label className=\"w50vw pad-10 mar-10 is-slategrey\">\n                                            Apples (£0.60 each)\n                                        </label>\n                                    </div>\n\n                                    <div className=\"row\">\n                                        <input\n                                            className=\"w50 space-04 pad-10 mar-10 border-1 radius-4\"\n                                            id=\"item2\"\n                                            type=\"number\"\n                                            placeholder=\"0\"\n                                            required\n                                            min=\"0\"\n                                        // onInput={() => this.value = Math.abs(this.value)}\n                                        />\n                                        <label className=\"w50vw pad-10 mar-10 is-slategrey\">\n                                            Oranges (£0.25 each)\n                                        </label>\n                                    </div>\n\n                                    <div>\n                                        <input className='form-button point w15vw bg-sg txt-12 is-fc0  pad-10 mar-10 space-04 radius-4' type=\"submit\" value=\"Add to Cart\" />\n\n                                        <button className='form-button point w15vw bg-sg txt-12 is-white  pad-10 mar-10 space-04 radius-4'\n                                            onClick={() => this.resetter()}>Reset\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n\n\n                        <div className=\"w60vw mar-10 is-slategrey radius-8 border-2\">\n\n                            <p className=\"pad-10\">\n                                Subtotal: £ {this.state.subtotal}\n                            </p>\n                            {\n                                (this.state.offer !== '0') &&\n                                <>\n                                    <p className=\"pad-10 is-red\">\n                                        Active offer: {offers[this.state.offer]}\n                                    </p>\n                                    <p className=\"pad-10\">\n                                        Discount: £ {this.state.discount}\n                                    </p>\n                                </>\n                            }\n\n                            <p className=\"pad-10\">\n                                Total: £ {this.state.total}\n                            </p>\n                            <button\n                                className='form-button point w25vw bg-sg txt-12 is-fc0 pad-10 mar-10 space-04 radius-4'\n                                onClick={() => this.restarter()}>Place Order and Restart\n                            </button>\n                        </div>\n\n                    </div>\n                    <div className=\"w30vw no-display\">\n                        <img className=\"w30vw mar-10 shadow-fc0\" src={fruits_1} alt=\"Apples and Oranges\" />\n                    </div>\n                </div>\n            </>\n        );\n    }\n\n}\n","import React from 'react';\n// import { NavLink } from 'react-router-dom';\n\nimport OrderCreator from './OrderCreator';\nimport offers from './offers-get';\n\nexport default class Selector extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            offerId: '0'\n        };\n    }\n\n    setOffer(e) {\n        this.setState({\n            offerId: e.target.value\n        }\n            // , () => { console.log(this.state.offerId); }\n        );\n    }\n\n    // returning data from child (OrderCreator) to parent, in this case for the final restart\n    // NB this has to be an arrow function!\n    returnOfferId = (returnedId) => {\n        this.setState({\n            offerId: returnedId\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <div className='cell left pad-10 mar-10'>\n                    <p className='is-red pad-5'>Select Offer </p>\n\n                    {/* issue: onChange returns the selected value, not the complete event */}\n                    <select\n                        className='txt-12 space-04'\n                        value={this.state.offerId}\n                        onChange={(e) => this.setOffer(e)}\n                    >\n                        {/* mapping, instead of hardcoding value and label ie\n                            <option value='0'>\n                                {offers[0]}\n                            </option> */}\n                        {\n                            Object.keys(offers).map(\n                                item =>\n                                    <option\n                                        key={item}\n                                        value={item}>\n                                        {Object.values(offers)[item]}\n                                    </option>\n                            )\n                        }\n                    </select>\n                </div>\n\n                {/* Passing parameter to child components */}\n\n                <OrderCreator offerId={this.state.offerId} callbackFromSelector={this.returnOfferId}/>\n                {/* {console.log(this.state.offerId)} */}\n\n            </>\n        );\n    }\n\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default function NotFound() {\n    return(\n        <>\n            <h3 className='pad-20 is-slategrey'>The page does not exist.</h3>\n            <NavLink className='a2 pad-20' to='/'>Back to home page</NavLink>\n        </>\n    );\n}\n\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Selector from './Selector';\n// import OrderCreator from './OrderCreator';\nimport NotFound from './NotFound';\n\n\nexport default function Main() {\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <Route exact path='/' component={Selector} />\n                    <Route path='/:badLink' component={NotFound} />\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n","import React from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport './App.css';\n\nimport Header from './frontend/Header';\nimport Main from './frontend/Main';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Header />\n        <Main />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}